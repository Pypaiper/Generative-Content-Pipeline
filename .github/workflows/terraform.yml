
name: Terraform Apply on Merge

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'infra/remote/**' # Trigger only on changes within this subdirectory

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: terraform # If using an environment secret
    steps:
      - name: Checkout repository code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0 # Specify your desired Terraform version

      - name: Terraform Init
        run: terraform init
        working-directory: ./infra/remote # Path to your Terraform subdirectory

      - name: Terraform Plan
        run: terraform import aws_s3_bucket.my_bucket $TF_VAR_bucket_name &&
            terraform import aws_db_subnet_group.rds_subnet_group rds-subnet-group &&
            terraform import aws_iam_role.sagemaker_role sagemaker-notebook-role &&
            terraform import aws_iam_policy.sagemaker_s3_policy sagemaker-s3-access-policy &&
            terraform plan -out=tfplan
        working-directory: ./infra/remote
        env:
          # Define any necessary environment variables for your Terraform deployment
          TF_VAR_region: ${{ secrets.REGION }} # Map GitHub secret to Terraform variable
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }} # Map GitHub secret to Terraform variable
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }} # Map GitHub secret to Terraform variable
          TF_VAR_db_name: ${{ secrets.DB_NAME }} # Map GitHub secret to Terraform variable
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }} # Map GitHub secret to Terraform variable

      - name: Terraform Apply
        run: terraform apply tfplan
        working-directory: ./infra/remote
        env:
          # Define any necessary environment variables for your Terraform deployment
          TF_VAR_region: ${{ secrets.REGION }} # Map GitHub secret to Terraform variable
          TF_VAR_db_username: ${{ secrets.DB_USERNAME }} # Map GitHub secret to Terraform variable
          TF_VAR_db_password: ${{ secrets.DB_PASSWORD }} # Map GitHub secret to Terraform variable
          TF_VAR_db_name: ${{ secrets.DB_NAME }} # Map GitHub secret to Terraform variable
          TF_VAR_bucket_name: ${{ secrets.BUCKET_NAME }} # Map GitHub secret to Terraform variable

