name: Test

on:

  push:
    branches-ignore:
      - master  # Excludes the master branch
  pull_request:
    branches: 
      - master
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Enable UV
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Install ruff
        run: uv tool install ruff@latest
      - name: Ruff lint
        run: uvx ruff check scraping/ video_generation/ opensora/
      - name: Ruff format
        run: uvx ruff format --diff scraping/ video_generation/ opensora/

  test-opensora:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.9
        channels: conda-forge, pytorch, defaults
        activate-environment: my-env
    - name: Install  conda dependencies
      shell: bash -l {0} # Use a login shell to ensure conda is activated
      run: |
        conda install -c conda-forge pyproject2conda
        pyproject2conda yaml -f opensora/pyproject.toml --python 3.10 -o environment.yaml --name opensora
        conda env update --file environment.yaml --prune
    - name: Install  source dependencies
      shell: bash -l {0} # Use a login shell to ensure conda is activated
      run: |
        git clone https://github.com/hpcaitech/TensorNVMe.git
        cd TensorNVMe
        . /opt/conda/etc/profile.d/conda.sh && conda activate opensora
        pip3 install -r requirements.txt
        pip3 install -v --no-cache-dir .
        cd ..
        rm -rf TensorNVMe
        git clone https://github.com/hpcaitech/Open-Sora.git
        cd Open-Sora
        . /opt/conda/etc/profile.d/conda.sh && conda activate opensora
        pip3 install -r requirements.txt
        pip3 install -v .
        cd ..
        rm -rf Open-Sora

    - name: Run tests
      shell: bash -l {0}
      run: |
        python -m pytest